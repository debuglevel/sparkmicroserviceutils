buildscript {
    ext.kotlin_version = '1.2.50'

    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.9.17"
    }
}

plugins {
    id "java"
    id 'org.jetbrains.kotlin.jvm' version "1.2.50"
    id "com.jfrog.bintray" version "1.7"
}

apply plugin: "maven-publish"
apply plugin: "java-library"
apply plugin: 'org.jetbrains.dokka'

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

group 'de.debuglevel.sparkmicroserviceutils'
version '0.0.9'

sourceCompatibility = 1.8

repositories {
    jcenter()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // Tests
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.2.0'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.2.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.2.0'
    testImplementation 'org.assertj:assertj-core:3.10.0'

    // Logging
    implementation 'io.github.microutils:kotlin-logging:1.4.9'

    // Spark (REST Server)
    compileOnly 'com.sparkjava:spark-kotlin:1.0.0-alpha'

    // Configuration
    implementation 'com.natpryce:konfig:1.6.9.0'
}

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/javadoc"
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier 'sources'
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'javadoc'
    outputDirectory = javadoc.destinationDir
    inputs.dir 'src/main/kotlin'
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        javaMaven(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_API_KEY')
    publications = ['javaMaven']
    publish = true
    pkg {
        repo = 'maven'
        name = 'sparkmicroserviceutils'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/debuglevel/sparkmicroserviceutils.git'
    }
}


//test {
//    useJUnitPlatform()
//
//    testLogging {
//        events "passed", "skipped", "failed"
//    }
//
//    reports {
//        html.enabled = true
//    }
//}